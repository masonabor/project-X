{"ast":null,"code":"// sessionHelper.js\n\n// Функція для встановлення даних користувача в сесію з обмеженням часу\nexport function setUserSession(userData, expiryTimeInMinutes) {\n  const expiryTimestamp = Date.now() + expiryTimeInMinutes * 60000; // Конвертуємо хвилини у мілісекунди\n  const sessionData = {\n    user: userData,\n    expiry: expiryTimestamp\n  };\n  sessionStorage.setItem(\"userSession\", JSON.stringify(sessionData));\n}\n\n// Функція для отримання даних користувача, якщо сесія ще дійсна\nexport function getUserSession() {\n  const sessionData = sessionStorage.getItem(\"userSession\");\n  if (sessionData) {\n    const parsedData = JSON.parse(sessionData);\n    const currentTime = Date.now();\n\n    // Перевіряємо, чи не минув час існування сесії\n    if (currentTime < parsedData.expiry) {\n      return parsedData.user;\n    } else {\n      // Якщо час минув, видаляємо сесію\n      sessionStorage.removeItem(\"userSession\");\n      return null;\n    }\n  }\n  return null;\n}\n\n// Функція для видалення сесії\nexport function clearUserSession() {\n  sessionStorage.removeItem(\"userSession\");\n}\n\n//import { setUserSession, getUserSession } from \"./sessionHelper.js\";","map":{"version":3,"names":["setUserSession","userData","expiryTimeInMinutes","expiryTimestamp","Date","now","sessionData","user","expiry","sessionStorage","setItem","JSON","stringify","getUserSession","getItem","parsedData","parse","currentTime","removeItem","clearUserSession"],"sources":["E:/amen/web/project-X/frontend/src/sessionHelper.js"],"sourcesContent":["// sessionHelper.js\r\n\r\n// Функція для встановлення даних користувача в сесію з обмеженням часу\r\nexport function setUserSession(userData, expiryTimeInMinutes) {\r\n    const expiryTimestamp = Date.now() + expiryTimeInMinutes * 60000; // Конвертуємо хвилини у мілісекунди\r\n    const sessionData = {\r\n        user: userData,\r\n        expiry: expiryTimestamp\r\n    };\r\n    sessionStorage.setItem(\"userSession\", JSON.stringify(sessionData));\r\n}\r\n\r\n// Функція для отримання даних користувача, якщо сесія ще дійсна\r\nexport function getUserSession() {\r\n    const sessionData = sessionStorage.getItem(\"userSession\");\r\n    if (sessionData) {\r\n        const parsedData = JSON.parse(sessionData);\r\n        const currentTime = Date.now();\r\n\r\n        // Перевіряємо, чи не минув час існування сесії\r\n        if (currentTime < parsedData.expiry) {\r\n            return parsedData.user;\r\n        } else {\r\n            // Якщо час минув, видаляємо сесію\r\n            sessionStorage.removeItem(\"userSession\");\r\n            return null;\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\n// Функція для видалення сесії\r\nexport function clearUserSession() {\r\n    sessionStorage.removeItem(\"userSession\");\r\n}\r\n\r\n//import { setUserSession, getUserSession } from \"./sessionHelper.js\";"],"mappings":"AAAA;;AAEA;AACA,OAAO,SAASA,cAAcA,CAACC,QAAQ,EAAEC,mBAAmB,EAAE;EAC1D,MAAMC,eAAe,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGH,mBAAmB,GAAG,KAAK,CAAC,CAAC;EAClE,MAAMI,WAAW,GAAG;IAChBC,IAAI,EAAEN,QAAQ;IACdO,MAAM,EAAEL;EACZ,CAAC;EACDM,cAAc,CAACC,OAAO,CAAC,aAAa,EAAEC,IAAI,CAACC,SAAS,CAACN,WAAW,CAAC,CAAC;AACtE;;AAEA;AACA,OAAO,SAASO,cAAcA,CAAA,EAAG;EAC7B,MAAMP,WAAW,GAAGG,cAAc,CAACK,OAAO,CAAC,aAAa,CAAC;EACzD,IAAIR,WAAW,EAAE;IACb,MAAMS,UAAU,GAAGJ,IAAI,CAACK,KAAK,CAACV,WAAW,CAAC;IAC1C,MAAMW,WAAW,GAAGb,IAAI,CAACC,GAAG,CAAC,CAAC;;IAE9B;IACA,IAAIY,WAAW,GAAGF,UAAU,CAACP,MAAM,EAAE;MACjC,OAAOO,UAAU,CAACR,IAAI;IAC1B,CAAC,MAAM;MACH;MACAE,cAAc,CAACS,UAAU,CAAC,aAAa,CAAC;MACxC,OAAO,IAAI;IACf;EACJ;EACA,OAAO,IAAI;AACf;;AAEA;AACA,OAAO,SAASC,gBAAgBA,CAAA,EAAG;EAC/BV,cAAc,CAACS,UAAU,CAAC,aAAa,CAAC;AAC5C;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}